/* JavaScript/jQuery for Project #1 */

$(document).ready(function () {

    // Initialize Firebase

    var firebaseConfig = {
        apiKey: "AIzaSyB9khk4lQ0jXPOoqgHRbc8kGs8FRBLCU0c",
        authDomain: "datenightplanner-db265.firebaseapp.com",
        databaseURL: "https://datenightplanner-db265.firebaseio.com",
        projectId: "datenightplanner-db265",
        storageBucket: "datenightplanner-db265.appspot.com",
        messagingSenderId: "363079175780",
        appId: "1:363079175780:web:8fbd5e9219a9e1b9019971"
    };

    firebase.initializeApp(firebaseConfig);

    // Global Variables
    //-------------------------------------------
    //-------------------------------------------

    // Database Variables
    //-------------------------------------------

    var database = firebase.database();
    var queryDB = firebase.database().ref();

    var userID; // Generated by RandomNo
    var userRecordKey;  // Autogenerated by DB
    var userAdded; // Generated by Moment.js


    // User Input Variables
    //-------------------------------------------

    var userName = "";
    var userDate = "";
    var placeSource = "";
    var userPlace = "";
    var needRestaurant;
    var needDessert;
    var needMovies;

    // Form Submission Variables
    //-------------------------------------------

    var isFirstClick = true;
    var isValid = false;

    // Error Checking Variables
    //-------------------------------------------

    var errName = false;
    var errDate = false;
    var errSource = false;
    var errPlace = false;
    var errOptions = false;
    var containsText = /\D/g;
    var containsNumbers = /\d/g;
    var zip_code = false;


    // Calculated from User Input
    //-------------------------------------------

    var dateDay = "";
    var dateMonth = "";
    var dateYear = "";
    var longitude;
    var latitude;

    // Other Variables

    //-------------------------------------------
    var welcomeMsg = "<p class='h4 text-dark'>Need help planning a special date that your partner will never forget?</p><p class='h4 text-primary'>Let us help you create your very own!</p>";
    var arrQuestions = ["Are you a cat person or a dog person?", "Are you a jealous person?", "Batman or Superman, who would win?", "Can you tell when someone is lying?", "Did anything make you upset today?", "Did you have an imaginary friend? What was his/her name?", "Do you consider yourself a spiritual person? How?", "Do you have a morning ritual?", "Do you have any nicknames?", "Do you have any pet peeves?", "Do you know anyone who is living their life to the fullest?", "Do you prefer cold weather or hot weather?", "Do you prefer polaroid or digital cameras?", "Do you think arguing is part of a relationship?", "Do you think your priorities have changed since you were younger?", "Have you ever been on a blind date?", "Have you ever been stalked on social media?", "Have you ever had a dream where everyone was in their underwear?", "Have you ever lost a friend? Why?", "Have you ever really kept a New Year’s resolution?", "Have you ever stalked someone on social media?", "Have you ever stolen anything?", "Have you ever won an award?", "How do you get to X place from here?", "How do you make friends?", "How do you spend your mornings?", "How has our relationship changed since we started dating?", "How long can you go without checking your phone?", "How long have you been at your current job?", "How old were you when you had your first job?", "How would you describe our relationship?", "How would your partner describe you?", "If someone gave you 20 dollars, what would you buy with it?", "If someone gave you an envelope with your death date inside of it, would you open it?", "If someone offered to tell you your future, would you accept it?", "If we were to raise children, what are the most important things you would want them to learn?", "If you could ask for a miracle, what would it be?", "If you could be an animal, what would it be and why?", "If you could be any age, what age would you choose?", "If you could be famous, would you want to? Why?", "If you could describe yourself in three words, what would they be?", "If you could do anything illegal without getting caught, what would you do?", "If you could get all your family members to donate to a charity, what would it be and why?", "If you could go anywhere in the world, where would you choose and why?", "If you could have dinner with anyone living or not, who would it be?", "If you could have more friends, would you?", "If you could have picked your own name, what would it be?", "If you could have tea with a fictional character, who would that be?", "If you could live anywhere in the world, where would it be?", "If you could only pack one thing for a trip (besides clothing) what would it be?", "If you could only save one item from a house fire, what would it be?", "If you could only store one type of food in your pocket, what would you carry?", "If you could sit down with your 13-year old self, what would you say?", "If you could spend an entire day with a family member, who would it be and why?", "If you had $100, what would you spend it on?", "If you had a chance to eat dessert for breakfast every day, what dessert would you choose?", "If you had a robot for the entire day, what would you ask it to do?", "If you had the opportunity to invent a new ice cream flavor, what would it be?", "If you had to pick one, skydiving, bungee jumping, or scuba diving, which would you do?", "If you made a bucket list for us, what would you add to it?", "If you never had to eat one vegetable, which would it be?", "If you were a farm animal, which would you be and why?", "If you were in a circus, which character would you be?", "If you were on death row, what would your last meal be?", "If you were to choose one way to be disciplined, what would it be?", "If you were to remove one social media app from your phone, which would it be and why?", "If you won the lottery, what would be your first big splurge?", "If your friend is sad, what do you do to make them feel better?", "If your life was a movie, which celebrity would play you?", "If your plane was going down, who would you would call?", "In what ways are you most similar to me?", "Is there a charitable cause you support?", "Is there a dream you’ve always had?", "What are the top three things on your bucket list?", "What are three fun facts about yourself?", "What are you most passionate about?", "What are you reading right now?", "What bad habits do you wish you could stop?", "What book had a big influence on you?", "What bores you?", "What cool conferences have you attended?", "What did you study?", "What did you think was the most challenging part of being a kid?", "What did you want to be growing up?", "What do I do that comforts you the most?", "What do I do that makes you smile?", "What do you consider most romantic?", "What do you like most about your friends?", "What do you like to cook the most?", "What do you most like about yourself?", "What do you think are the best traits for a person to have?", "What do you think of this place?", "What do you think people need to know about each other before they get married?", "What does success mean to you?", "What drink do you suggest I get?", "What fun plans do you have for the weekend?", "What gives you butterflies?", "What has been the lowest point of your life?", "What hurts your feelings?", "What instrument would you like to play?", "What is a significant event that has changed you?", "What is one thing you can’t live without?", "What is one thing you should never say at a wedding?", "What is something you wish you could do everyday?", "What is something you’ve always wanted to do, but are scared to?", "What is the best or worst trait you inherited from your parents?", "What is the best part about taking a selfie?", "What is the best pickup line you’ve ever used? Heard?", "What is the best restaurant you’ve been to?", "What is the biggest risk you’ve ever taken?", "What is the first thing you think about when you wake up in the morning?", "What is the funniest gift you have ever given?", "What is the most difficult thing you’ve ever done?", "What is the most memorable lesson you learned from your parents?", "What is the one food you could eat for the rest of your life?", "What is the silliest thing someone has ever said to you?", "What is the silliest thing you’ve posted online?", "What is the strangest gift you have ever received?", "What is the weirdest food combination you’ve ever tried?", "What is the worst advice you have given?", "What is the worst first date you have ever been on?", "What is the worst pickup line you have ever heard?", "What is the worst present you have ever received and why?", "What is your earliest memory?", "What is your favorite book?", "What is your favorite celebrity scandal?", "What is your favorite guilty pleasure TV show?", "What is your favorite kitchen smell?", "What is your favorite place in the entire world?", "What is your favorite weekend activity?", "What is your funniest memory of our dates?", "What is your idea of the perfect day?", "What is your least favorite chore?", "What is your most embarrassing moment?", "What is your spirit animal?", "What job did you want to do when you were a kid?", "What keeps you up at night?", "What made you laugh at school today?", "What made you laugh this week?", "What makes you feel discouraged?", "What makes you laugh out loud?", "What makes you most proud?", "What makes you most uncomfortable about dating?", "What makes you really angry?", "What makes you the happiest?", "What makes you very sentimental?", "What motivates you most in life?", "What scares you most about your future?", "What talent do you wish you had?", "What things do you consider to be relationship deal breakers?", "What three things are you most grateful for?", "What three things do you want to be remembered for?", "What time period would you travel to?", "What was the biggest punishment you’ve ever received?", "What was the first job you ever had?", "What was the last thing that made you smile?", "What was your best friend’s name growing up?", "What was your favorite thing to do as a kid?", "What was your worst “foot in mouth” moment?", "What was your worst wardrobe mistake?", "What would be the first thing you would do if you traded places with your family member?", "What would be the title of your memoire?", "What would be your ideal day?", "What would make you (if parent) most upset? A tattoo, a nose ring or a bad boyfriend/girlfriend?", "What would you do if you were home alone and the power went out?", "What would your ideal life look like?", "What would your rock band group be called?", "What would your theme song be if you had your own show?", "What’s a good place to eat around here?", "What’s one movie you could watch over and over?", "What’s one thing you’ve won and how did you win it?", "What’s something not many people know about you?", "What’s the best compliment you’ve ever received?", "What’s the most fun project you’ve ever worked on?", "What’s the most important thing I should know about you?", "What’s the nicest thing a family member has ever done for you?", "What’s the weirdest dream you’ve ever had?", "What’s the worst thing one can say on a first date?", "What’s your all-time favorite band?", "What’s your dream job?", "What’s your favorite TV show?", "What’s your favorite word?", "What’s your guilty pleasure?", "What's your favorite Podcast?", "What's your favorite YouTube show?", "When have you been the most happy?", "When is the last time you laughed so hard that you cried?", "When you were a kid what did you think your life would look like now?", "Where do you see yourself in five years?", "Where do you see yourself living when you retire?", "Where do you want to be ten years from now?", "Where do you want to go on the next family vacation?", "Where is a good place to get food around here?", "Where’s the most exotic place you’ve ever been?", "Which animal at the zoo do you like best?", "Which of your family members are you most alike?", "Who are you most thankful for and why?", "Who do you count on the most for help?", "Who do you text the most?", "Who has been the most influential person in your life and why?", "Who is a celebrity you admire?", "Who is most influential in your life?", "Who makes you laugh the most?", "Who was your favorite teacher and why?", "Who was your first crush and why?", "Who would you swap lives with for a day?", "Who’s your biggest hero?", "Who’s your favorite comedian?", "Would you ever get a tattoo? What would it be?", "Would you rather be invisible or have X-ray vision?", "Would you want to live on a boat, a mountain or an island?"];
    var randomQ;

    // Application Logic
    //-------------------------------------------
    //-------------------------------------------

    // Page Load
    //-------------------------------------------
    // Tested and Signed Off - 01/25/2020 PLK
    //-------------------------------------------

    $("#message").html(welcomeMsg);
    $("#accordion").hide();
    $("#restaurantvis").hide();
    $("#restaurant-table").hide();
    $("#dessertvis").hide();
    $("#moviesvis").hide();
    $("#sunrisevis").hide();
    $("#weathervis").hide();
    $("#forecastvis").hide();


    // Store user input from FORM on Submit
    //-------------------------------------------
    // Tested and Signed Off - 01/25/2020 PLK
    //-------------------------------------------

    $("#submit").on("click", function (event) {

        // Prevents form action default 
        event.preventDefault();

        // Clear any error messages on the userInput form
        $("#invalid_name").text("");
        $("#invalid_date").text("");
        $("#invalid_source").text("");
        $("#invalid_place").text("");

        // Checks for first click of submit button

        if (isFirstClick === true) {

            // Set variable to false to prevent new record if user clicks submit again
            isFirstClick = false;

            // Generate random userKey
            userID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);

            // Console log userID
            // console.log("----User ID----");
            // console.log(userID);

            // Assign date/time added to a variable
            userAdded = moment().format('lll');

            // Create database record for session with userKey
            var newDater = {
                user: userID,
                added: userAdded,
                name: "",
                source: "",
                place: "",
                date: "",
                year: "",
                month: "",
                day: "",
                lng: "",
                lat: "",
                restaurants: "",
                desserts: "",
                movies: ""
            };

            // Push new record to database
            database.ref().push(newDater);

            // Query the database after child added for key value
            queryDB.orderByChild("user").equalTo(userID).on("child_added", function (snapshot) {

                // Set new record key to variable
                userRecordKey = snapshot.key;
                // console.log("Inside function check-----");
                // console.log(snapshot.key);
                // console.log(userRecordKey);
                // console.log(snapshot.val());
            });

            // console.log("---Outside function check----");
            // console.log(userRecordKey);

            // Call validateForm () function
            validateForm();

        } else {

            // Hide the Accordion in the DOM and append message for user
            $("#message").html(welcomeMsg);
            $("#accordion").hide();
            $("#restaurantvis").hide();
            $("#restaurant-table").hide();
            $("#dessertvis").hide();
            $("#moviesvis").hide();
            $("#sunrisevis").hide();
            $("#weathervis").hide();
            $("#forecastvis").hide();

            // Call validateForm () function
            validateForm();

        }

    });

    // Form Validation function ()
    //-------------------------------------------
    // Tested and Signed Off - 01/25/2020 PLK
    //-------------------------------------------

    function validateForm() {

        // Set userName = Form userName
        userName = $("#userName").val().toUpperCase();
        // console.log("--Contents of User Name--");
        // console.log(userName);

        // Test if null or equals 0, set or clear error message, and set error counter
        if (userName === "" || userName === "0" || containsNumbers.test(userName)) {
            $("#invalid_name").html("Please enter your first name.");
            errName = true;
        } else {
            $("#invalid_name").html("");
            errName = false;
        }

        // console.log("---First Name and Error Status---");
        // console.log(userName);
        // console.log(errName);

        // Set userDate = Form userDate
        // Date is controlled by the calendar, no user input is allowed

        userDate = $("#userDate").val();

        //  Test if null
        if (userDate === "") {
            $("#invalid_date").html("Please enter a valid date.");
            errDate = true;
        } else {
            $("#invalid_date").html("");
            errDate = false;
            dateMonth = userDate.substr(0, 2);
            dateDay = userDate.substr(2, 2);
            dateYear = userDate.substr(4, 4);
        }

        // console.log("---Selected Date and Error Status---");
        // console.log(userDate);
        // console.log(errDate);
        // console.log("---Selected Month---");
        // console.log(dateMonth);
        // console.log("---Selected Day---");
        // console.log(dateDay);
        // console.log("---Selected Year---");
        // console.log(dateYear);


        // Set userPlace = Form userPlace

        userPlace = $("#userPlace").val();

        // Test if null

        if (userPlace === "") {
            $("#invalid_place").html("Enter a location.");
            errPlace = true;
        } else {
            $("#invalid_place").html("");
            errPlace = false;
        }

        // Set placeSource = Form source

        placeSource = $("#source").val();

        // Test if null

        if (placeSource === "") {
            $("#invalid_source").html("Please select a location type.");
            errSource = true;
        } else {
            $("#invalid_source").html("");
            errSource = false;
        }


        // Test for Valid Zip Code

        if (placeSource === "zip") {

            if (userPlace === "" || userPlace.length < 5 || userPlace.length > 5 || containsText.test(userPlace)) {
                $("#invalid_place").html("Please enter a zip code.");
                errPlace = true;
            } else {
                $("#invalid_place").html("");
                zip_code = true;
                errPlace = false;
            };
        }

        // console.log("---Date Location and Error Status---");
        // console.log(userPlace);
        // console.log(errPlace);

        // Test for Valid City and State

        if (placeSource === "city") {

            if (userPlace === "" || userPlace.indexOf(",") < 0 || containsNumbers.test(userPlace)) {
                $("#invalid_place").html("Please enter a city and state.");
                errPlace = true;
            } else {
                $("#invalid_place").html("");
                errPlace = false;
            };
        }

        // console.log("---Date Location and Error Status---");
        // console.log(userPlace);
        // console.log(errPlace);

        // Set value of variable based on whether checkbox is checked
        if (document.getElementById("needRestaurant").checked === true) {
            needRestaurant = true;
        } else {
            needRestaurant = false;
        }

        // Set value of variable based on whether checkbox is checked
        if (document.getElementById("needDessert").checked === true) {
            needDessert = true;
        } else {
            needDessert = false;
        }

        // Set value of variable based on whether checkbox is checked
        if (document.getElementById("needMovies").checked === true) {
            needMovies = true;
        } else {
            needMovies = false;
        }

        // Check whether at least one box is checked
        if (needRestaurant === false && needDessert === false && needMovies === false) {
            errOptions = true;
            $("#invalid_options").html("Please select at least one option.");
        } else {
            $("#invalid_options").html("");
            errOptions = false;
        }

        // console.log("---Need Restaurant---");
        // console.log(needRestaurant);
        // console.log("---Need Dessert---");
        // console.log(needDessert);
        // console.log("---Need Movies---");
        // console.log(needMovies);
        // console.log("---At least 1 box checked---");
        // console.log(errOptions);

        if (errOptions === false && errName === false && errDate === false && errSource === false && errPlace === false) {
            isValid = true;
            updateDatabase();
        } else {
            isValid = false;
        }

    }

    // Update user's database record based on Record Key
    // Call App Functions

    async function updateDatabase() {

        // Get longitude and latitude from userPlace

        var convAPIkey = "c833b0a3e4104de495176d7252219568";
        var convQueryURL = "https://api.opencagedata.com/geocode/v1/json?countrycode=us&q=" + userPlace + "&key=" + convAPIkey + "&language=en&pretty=1"

        await $.ajax({
            type: "GET",
            url: convQueryURL,
            datatype: "json",
            success: function (response) {
                latitude = response.results[0].geometry.lat;
                longitude = response.results[0].geometry.lng;
                console.log("Internal to Function: " + latitude + " , " + longitude);
            }
        });

        // Console log longitude and latitude
        // console.log("External to Function: " + latitude + " , " + longitude);

        // Update record in database based on Record Key

        var recordRef = database.ref(userRecordKey);

        recordRef.update({
            "name": userName,
            "source": placeSource,
            "place": userPlace,
            "date": userDate,
            "year": dateYear,
            "month": dateMonth,
            "day": dateDay,
            "lng": longitude,
            "lat": latitude,
            "restaurants": needRestaurant,
            "desserts": needDessert,
            "movies": needMovies
        });

        // Add User's Name to DOM
        $("#message").empty();
        $("#message").append(userName + " your results are below...");


        // Call other APIs

        sunset();
        weather();
        forecast();
        updateMovies(needMovies);
        restaurantUpdate(needRestaurant);
        dessertsUpdate(needDessert);
    }

    // Get Results Data
    //-------------------------------------------
    //-------------------------------------------

    // Sunset () function
    //-------------------------------------------
    // Tested and Signed Off - 01/__/2020 SB
    //-------------------------------------------

    function sunset() {

        // Show Results Accordion
        $("#sunrisevis").show();

        // Call API

        $.ajax({
            url: "https://api.sunrise-sunset.org/json?lat=" + latitude + "&lng=" + longitude,
            method: "GET",
        })

            .then(function (response) {

                var sunrise = response.results.sunrise;
                var sunset = response.results.sunset;

                var hrs = -(new Date().getTimezoneOffset() / 60);

                // console.log(moment(sunset, 'HH:mm A').add(hrs, 'hours').format("HH:mm A"))
                var sunsetLocal = moment(sunset, 'HH:mm A').add(hrs, 'hours').format("HH:mm A");

                // console.log(moment(sunrise, 'HH:mm A').add(hrs, 'hours').format("HH:mm A"))
                var sunriseLocal = moment(sunrise, 'HH:mm A').add(hrs, 'hours').format("HH:mm A");

                // Write results to the DOM in the results accordion
                $("#resultsSunrise").empty();
                $("#resultsSunrise").html("<br>Sunrise: " + sunriseLocal + "<br> Sunset: " + sunsetLocal);

            });

    }

    // Weather () function
    //-------------------------------------------
    // Tested and Signed Off - 01/__/2020 SB
    //-------------------------------------------

    function weather() {

        // Show Results Accordion
        $("#weathervis").show();

        // Call API
        var weatherAPIKey = "166a433c57516f51dfab1f7edaed8413";
        var weatherQueryURL = "";

        if (zip_code) {

            weatherQueryURL = "https://api.openweathermap.org/data/2.5/weather?zip=" + userPlace + "&appid=" + weatherAPIKey;

        } else {

            weatherQueryURL = "https://api.openweathermap.org/data/2.5/weather?lat=" + latitude + "&lon=" + longitude + "&appid=" + weatherAPIKey;

        }

        $.ajax({
            url: weatherQueryURL,
            method: "GET"
        })

            .then(function (response) {

                // Log the resulting object
                // console.log(response);

                var windy = "";
                var cloudy = "";

                if (response.wind.speed < 11) {
                    windy = "Light breeze";
                }

                if (response.wind.speed > 10 && response.wind.speed < 39) {
                    windy = "Moderate wind";
                }

                if (response.wind.speed > 38 && response.wind.speed < 62) {
                    windy = "Strong wind";
                }

                if (response.wind.speed > 61 && response.wind.speed < 103) {
                    windy = "Very strong wind";
                }

                if (response.wind.speed > 102) {
                    windy = "Hurricane";
                }

                if (response.clouds.all < 11) {
                    cloudy = "Sunny";
                }
                if (response.clouds.all > 10 && response.clouds.all < 26) {
                    cloudy = "Slightly cloudy";
                }

                if (response.clouds.all > 25 && response.clouds.all < 51) {
                    cloudy = "Partly cloudy";
                }

                if (response.clouds.all > 52 && response.clouds.all < 76) {
                    cloudy = "Very cloudy";
                }

                if (response.clouds.all > 75) {
                    cloudy = "Overcast";
                }

                // Transfer content to HTML for current weather information 
                var temp = (response.main.temp - 273.15) * 1.80 + 32;
                var highTemp = (response.main.temp_max - 273.15) * 1.80 + 32;
                var lowTemp = (response.main.temp_min - 273.15) * 1.80 + 32;

                // Write results to the DOM in the results accordion
                $("#resultsWeather").empty();
                $("#resultsWeather").html("<br>Current Temperature: " + temp.toFixed(1) + " | High: " + highTemp.toFixed(1) + " | Low: " + lowTemp.toFixed(1) + " | " + cloudy + " | " + windy + "<br>");

            });

    }

    // Forecast () function
    //-------------------------------------------
    // Tested and Signed Off - 01/__/2020 SB
    //-------------------------------------------

    function forecast() {

        // Show Results Accordion
        $("#forecastvis").show();

        // Call API
        var forecastAPIKey = "166a433c57516f51dfab1f7edaed8413";
        var forecastQueryURL = "";

        if (zip_code) {

            forecastQueryURL = "https://api.openweathermap.org/data/2.5/forecast?zip=" + userPlace + "&appid=" + forecastAPIKey;

        } else {

            forecastQueryURL = "https://api.openweathermap.org/data/2.5/forecast?lat=" + latitude + "&lon=" + longitude + "&appid=" + forecastAPIKey;

        }
        $.ajax({
            url: forecastQueryURL,
            method: "GET"
        })

            .then(function (response) {
                $("#resultsForecast").empty();

                var hours = [7, 15, 23, 31, 39];
                var days = [1, 2, 3, 4, 5];

                var windy = "";
                var cloudy = "";

                function wind(i) {
                    if (response.list[i].wind.speed < 11) {
                        windy = "Light breeze";
                    }

                    if (response.list[i].wind.speed > 10 && response.list[i].wind.speed < 39) {
                        windy = "Moderate wind";
                    }

                    if (response.list[i].wind.speed > 38 && response.list[i].wind.speed < 62) {
                        windy = "Strong wind";
                    }

                    if (response.list[i].wind.speed > 61 && response.list[i].wind.speed < 103) {
                        windy = "Very strong wind";
                    }

                    if (response.list[i].wind.speed > 102) {
                        windy = "Hurricane";
                    }

                }

                function cloud(i) {
                    if (response.list[i].clouds.all < 11) {
                        cloudy = "Sunny";
                    }
                    if (response.list[i].clouds.all > 10 && response.list[i].clouds.all < 26) {
                        cloudy = "Slightly cloudy";
                    }

                    if (response.list[i].clouds.all > 25 && response.list[i].clouds.all < 51) {
                        cloudy = "Partly cloudy";
                    }

                    if (response.list[i].clouds.all > 52 && response.list[i].clouds.all < 76) {
                        cloudy = "Very cloudy";
                    }

                    if (response.list[i].clouds.all > 75) {
                        cloudy = "Overcast";
                    }

                }

                for (i = 0; i < hours.length; i++) {
                    var temp = (response.list[hours[i]].main.temp - 273.15) * 1.80 + 32;
                    wind(hours[i]);
                    cloud(hours[i])

                    // Write results to the DOM in the results accordion
                    $("#resultsForecast").append("Day " + (i + 1) + ": Avg. Temp.: " + temp.toFixed(1) + " | " + windy + " | " + cloudy + "<br>");
                }

            });

        $("#accordion").show();
    }


    // Restaurant () function
    //-------------------------------------------
    // Tested and Signed Off - 01/__/2020 JG
    //-------------------------------------------

    function restaurantUpdate(needRestaurant) {
        // Check to see if option is checked
        if (needRestaurant) {


            // Call API
            var apiKey = " d0782c26de92e778b76dcefa06a8ea95";
            $.ajax({
                url: "https://developers.zomato.com/api/v2.1/search?" + "&lat=" + latitude + "&lon=" + longitude,
                method: "GET",
                headers: { "user-key": apiKey },
            }).then(function (response) {

                // console.log("-----restUpdate----");
                // console.log(response);
                var results = response;


                for (let i = 0; i < results.restaurants.length; i++) {

                    var name = results.restaurants[i].restaurant.name;
                    var details = results.restaurants[i].restaurant.url;
                    var aTag = $("<a>")
                    aTag.attr("target", "_blank")
                    aTag.attr("class", "restLink")
                    aTag.attr("href", details).text(details);
                    var cuisines = results.restaurants[i].restaurant.cuisines;
                    var newRow = $("<tr>").append(
                        $("<td>").text(name),
                        $("<td>").text(cuisines),
                        $("<td>").append(aTag)

                    );
                    // Write results to the DOM in the results accordion
                    $("#restaurant-table > tbody").append(newRow);
                    // Show Results Accordion
                    $("#restaurantvis").show();
                    $("#restaurant-table").show();
                }

            })
        }
    }

    // Dessert Spots () function
    //-------------------------------------------
    // Tested and Signed Off - 01/__/2020 JG
    //-------------------------------------------
    function dessertsUpdate(needDessert) {
        // Check to see if option is checked
        if (needDessert) {

            // Call API
            var apiKey = " d0782c26de92e778b76dcefa06a8ea95";
            $.ajax({
                url: "https://developers.zomato.com/api/v2.1/search?q=desserts" + "&lat=" + latitude + "&lon=" + longitude,

                method: "GET",
                headers: { "user-key": apiKey },

            }).then(function (response) {

                // console.log(response);
                var results = response;
                // console.log(results);
                // console.log("------Test----");
                // console.log(results.restaurants[0].restaurant.name);
                for (let i = 0; i < results.restaurants.length; i++) {
                    //     console.log("###titleonly####");
                    //    console.log(results.restaurants[i].restaurant.name);
                    //    console.log(results.restaurants[i].restaurant.location);
                    //    console.log(results.restaurants[i].restaurant.highlights);
                    var name = results.restaurants[i].restaurant.name;
                    var location = results.restaurants[i].restaurant.location.address;
                    var timings = results.restaurants[i].restaurant.timings;

                    var newRow = $("<tr>").append(
                        $("<td>").text(name),
                        $("<td>").text(location),
                        $("<td>").text(timings)

                    );
                    // Write results to the DOM in the results accordion
                    $("#desserts-table > tbody").append(newRow);
                    // //    console.log("------Location-----");
                    // //    console.log(results.restaurants[i].restaurant.location);

                    // Show Results Accordion
                    $("#dessertvis").show();

                }

            })
        }
    }

    // Movies Nearby () function
    //-------------------------------------------
    // Tested and Signed Off - 01/__/2020 JG
    //-------------------------------------------

    function updateMovies(needMovies) {

        // Check to see if option is checked
        if (needMovies) {

            // Call API

            var apiKey = "wgkpzjdk25tfwrybxqvrtv2p";
            // Sonal "p8d678gus35c6ym5tygxw2g3";


            var queryURL = "https://data.tmsapi.com/v1.1/movies/showings?startDate=" + dateYear + "-" + dateMonth + "-" + dateDay + "&lat=" + latitude + "&lng=" + longitude + "&api_key=" + apiKey;
            $.ajax({
                url: queryURL,
                method: "GET"
            }).then(function (response) {
                // console.log(queryURL);
                // console.log(response);
                var resultsMovies = response;
                $("#movie-table > tbody").empty();
                for (let i = 0; i < resultsMovies.length; i++) {
                    // console.log(resultsMovies[i]);
                    var title = resultsMovies[i].title;
                    var details = resultsMovies[i].officialUrl;
                    var aTag = $("<a>").attr("href", details).text(details);
                    // console.log(resultsMovies[i].showtimes);
                    for (let j = 0; j < resultsMovies[i].showtimes.length; j++) {
                        //     console.log("----showtimes----");
                        var showTimes = resultsMovies[i].showtimes[j].theatre.name;
                    }
                    var newRow = $("<tr>").append(
                        $("<td>").text(title),
                        $("<td>").append(aTag),
                        $("<td>").text(showTimes)
                    );

                    // Write results to the DOM in the results accordion
                    $("#movie-table > tbody").append(newRow);

                    // Show Results Accordion
                    $("#moviesvis").show();


                }


            });
        }
    }



    // Help Data - return in modal
    //-------------------------------------------
    //-------------------------------------------

    // Conversation Starters () function
    //-------------------------------------------
    // Tested and Signed Off - 01/26/2020 PLK
    //-------------------------------------------

    $("#starters").on("click", function (event) {

        // Prevent default action on click
        event.preventDefault();

        // Query the data from an Array
        randomQ = arrQuestions[Math.floor(Math.random() * arrQuestions.length - 1) + 1];
        $("#resultsStarters").html(randomQ);

    });


    // Day in History API Data
    //-------------------------------------------
    // Tested and Signed Off - 01/25/2020 PLK
    //-------------------------------------------

    // AJAX Call when 'Date In History' button clicked

    $("#history").on("click", function (event) {

        // Prevent default action on click
        event.preventDefault();

        if (userDate === "") {

            // Set error message
            $("#resultsHistory").html("Please submit the form above with a valid date.");

        } else {

            getFacts();
        };


    });


    // Joke of the Day API Data
    //-------------------------------------------
    // Tested and Signed Off - 01/24/2020 PLK
    //-------------------------------------------

    // AJAX Call with settings when 'Joke of the Day' button clicked

    $("#jokes").on("click", function (event) {

        // Prevent default action on click
        event.preventDefault();

        // AJAX Call to API
        //-----Pulls the joke for the current day-------------

        $.ajax({
            url: "https://api.jokes.one/jod?category=jod",
            data: {
                format: 'json'
            },
            // Error handling
            error: function () {
                $("#resultsJokes").html("An error occurred, please try again.");
            },
            // On success, display results in Jokes modal
            success: function (response) {
                $("#resultsJoke").html(response.contents.jokes[0].joke.text);
            },
            type: 'GET'
        });

    });

    // Quote of the Day API Data
    //-------------------------------------------
    // Tested and Signed Off - 01/24/2020 PLK
    //-------------------------------------------

    // AJAX Call with settings when 'Quote of the Day' button clicked

    $("#quotes").on("click", function (event) {

        // Prevent default action on click
        event.preventDefault();

        // AJAX Call to API
        //-----Pulls the quote for the current day-------------

        $.ajax({
            url: "https://quotes.rest/qod.json",
            data: {
                format: 'json'
            },
            // Error handling
            error: function () {
                $("#resultsQuotes").html("An error occurred, please try again.");
            },
            // On success, display results in Quotes modal
            success: function (response) {
                $("#resultsQuotes").html(response.contents.quotes[0].quote);
            },
            type: 'GET'
        });

    });


    // Day in History API Data
    //-------------------------------------------
    // Tested and Signed Off - 01/25/2020 PLK
    //-------------------------------------------

    function getFacts() {

        // Retrieve user information stored in database

        var queryDB = firebase.database().ref();

        queryDB.orderByChild("user").equalTo(userID).on("value", function (snapshot) {

            // Before DB Call
            // console.log("Pre-call Record Key and Date");
            // console.log(userRecordKey);
            // console.log(userDate);

            snapshot.forEach(function (snapshot) {

                // console.log("Post-call Record Key , Month, Day, and Date");
                // console.log(snapshot.key);
                // console.log(snapshot.child("date").val());
                // console.log(snapshot.child("month").val());
                // console.log(snapshot.child("day").val());

                // Assign db values for Day and Month to variables
                dateMonth = snapshot.child("month").val();
                dateDay = snapshot.child("day").val();
            });
            // console.log("Outside call Month and Day");
            // console.log(dateMonth);
            // console.log(dateDay);

            // AJAX Call to API
            $.ajax({
                url: "https://byabbe.se/on-this-day/" + dateMonth.replace(/^0+/, '') + "/" + dateDay.replace(/^0+/, '') + "/events.json",
                data: {
                    format: 'json'
                },

                // Error handling
                error: function () {
                    $("#resultsHistory").html("Please submit the form above with a valid date.");
                },

                // On success, display results in History modal
                success: function (response) {
                    $("#resultsHistory").empty();
                    console.log(response);

                    for (let i = 0; i < response.events.length; i++) {

                        $("#resultsHistory").append("<p>" + response.events[i].year + ": " + response.events[i].description + "</p>");
                    }
                },
                type: 'GET'
            });
        });
    }

    // Exit button clicked function
    //-------------------------------------------
    // Tested and Signed Off - 01/25/2020 PLK
    //-------------------------------------------

    $("#exit").click(function () {

        // console.log("----- Record Key-----");
        // console.log(userRecordKey);


        // Check to see if there is a record in the database for the user
        if (userID !== "") {

            // If record exists, delete it

            var deleteRef = database.ref(userRecordKey);

            function delAssets() {
                deleteRef.remove();
                console.log("Deleted: " + userRecordKey);
            };

            delAssets();

            // Open farewell.html in the same tab
            window.open("goodbye.html", '_self');

        } else {

            // Open farewell.html in the same tab
            window.open("goodbye.html", '_self');
        }

    })

});
